#!/bin/bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# git related functions
# from https://www.phillip-kruger.com/post/some_bash_functions_for_git/

function clone {
    if [ $# -eq 0 ]; then
        echo "Please enter repo name or full url:";
        read -r repo;
        clone '$repo';
    elif [[ $1 == --help ]] || [[ $1 == --h ]] || [[ $1 == --? ]]; then
        echo "This will clone a git repo.";
        echo "";
        echo "Option 1: You can just provide the name, eg:";
        echo "$ clone membership";
        echo "This will do: git clone https://github.com/yuxiang-gao/membership.git";
        echo "";
        echo "Option 2: Provide the full URL";
        echo "$ clone https://github.com/smallrye/smallrye-rest-client.git";
        echo "This will do: git clone https://github.com/smallrye/smallrye-rest-client.git";
    else
        if [[ $1 == https://* ]] || [[ $1 == git://* ]] || [[ $1 == ssh://* ]] ; then
            URL=$1;
        else
            URL='https://github.com/yuxiang-gao/'$1'.git';
        fi

        echo git clone "$URL";
        git clone "$URL";
    fi
}

# If you contribute to projects, and you are working against your own fork, this is a handy way to keep you fork in sync with changes in the upstream master.

function sync {

    if git remote -v | grep -q 'upstream'; then
        echo "upstream exist";
    else
        echo "Please enter the upstream git url:";
        read -r url;
        git remote add upstream "$url"
    fi

    git remote -v
    git fetch upstream
    git pull upstream master
    git checkout master
    git rebase upstream/master
}

# Normal commit, but adding -s to include your signature.
function commit {

    if [ $# -eq 0 ]; then
        echo "Please enter a commit message:";
        read -r msg;
        commit "$msg";
    elif [[ $1 == --help ]] || [[ $1 == --h ]] || [[ $1 == --? ]]; then
        echo "This will commit changes to a local git repo, eg:";
        echo "$ commit 'some changes made'";
        echo "This will do: git commit -s -m 'some changes made'";
    else
        echo git commit -s -a -m "$1"
        git commit -s -a -m "$1";
    fi
}
